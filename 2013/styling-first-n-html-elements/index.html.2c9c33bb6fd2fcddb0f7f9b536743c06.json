{"head":{"title":"Styling the first N HTML elements","date":"2013-12-29T00:00:00.000Z","layout":"Post","route":"2013/styling-first-n-html-elements","image":"/assets/styling-first-n-html-elements.jpeg","imageUrl":"https://unsplash.com/photos/MMJx78V7xS8","imageAuthor":"Steven Kamenar","imageAuthorUrl":"https://unsplash.com/@skamenar","imageProviderName":"Unsplash","imageProviderUrl":"https://unsplash.com/","primaryColor":"rgba(207, 224, 233, .9)","secondaryColor":"#304232","linksColor":"#908f58","linksHoverColor":"#506240","description":"Here's a little trick I learned today. Think of a table with rows. Do you think that it's possible to only apply styles to first, let's say…"},"body":"<p>Here's a little trick I learned today. Think of a table with rows.\nDo you think that it's possible to only apply styles to first, let's\nsay 3, rows using CSS3 selector? Well, it turns out it is possible with\nwell known\n<a href=\"http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\">:nth-child()</a> pseudo\nclass selector. Let's look at it's basic usage first.</p>\n<h2 id=\"basics\"><a href=\"#basics\" class=\"phenomic-HeadingAnchor\">#</a>Basics</h2>\n<p>Besides accepting <code>odd</code> or <code>even</code> as an argument value <code>:nth-child()</code>\naccepts algebraic expression in format: <em>a</em>n+<em>b</em> and executes it in iteration\nby incrementing <code>n</code> starting with <code>n = 0</code> until it reaches the end of the\nelements tree or until the resulting value is zero or negative.</p>\n<p>So, assuming following markup:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>f<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>o<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>o<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>b<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>a<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>r<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span></code></pre>\n<p><code>.item:nth-child(2n+1)</code> will do something like:</p>\n<ol>\n<li><code>2 * 0 + 1</code> equals 1 and so first element will be selected</li>\n<li><code>2 * 1 + 1</code> equals 3 and so third element will be selected</li>\n<li><code>2 * 2 + 1</code> equals 5 and so fifth element will be selected</li>\n<li><code>2 * 3 + 1</code> equals 7 and so selector will stop iterating as seventh element\ndoesn't exist (note that elements index start with <code>1</code> and not with <code>0</code>)</li>\n</ol>\n<h2 id=\"now-the-real-stuff\"><a href=\"#now-the-real-stuff\" class=\"phenomic-HeadingAnchor\">#</a>Now the real stuff</h2>\n<p>In the end of <a href=\"http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\">spec</a>,\nthere is this note:</p>\n<blockquote>\n<p>The value <em>a</em> can be negative, but only the positive values of <em>a</em>n+<em>b</em>, for n≥0,\nmay represent an element in the document tree.</p>\n</blockquote>\n<p>What this means is that if we pass <code>-1n+3</code> or shorter <code>-n+3</code> following\niteration will happen:</p>\n<ol>\n<li><code>-1 * 0 + 3</code> equals 3 and so third element will be selected</li>\n<li><code>-1 * 1 + 3</code> equals 2 and so second element will be selected</li>\n<li><code>-1 * 2 + 3</code> equals 1 and so first element will be selected</li>\n<li><code>-1 * 3 + 3</code> equals 0 and so selector will stop as there is no element with\nindex <code>0</code></li>\n</ol>\n<p>..which results in selecting first 3 elements! Done.</p>\n<p>By the way there is a <a href=\"http://nth-test.com/\">online nth-child simulator</a> which I\npersonally use when playing with <code>nth-*</code> selectors. Just FYI.</p>\n","__filename":"posts/2013-12-29-styling-first-n-html-elements.md","__url":"/2013/styling-first-n-html-elements/","__resourceUrl":"/2013/styling-first-n-html-elements/index.html","__dataUrl":"/2013/styling-first-n-html-elements/index.html.2c9c33bb6fd2fcddb0f7f9b536743c06.json"}